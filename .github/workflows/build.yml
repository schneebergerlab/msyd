# This workflow will build msyd as a python package, and call the CLI interface to check the install worked
# adapted from 
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        # manually install syris dependencies
        # seems to be no longer necessary with github install
        #pip install Cython numpy pandas scipy psutil igraph longestrunsubsequence pysam pulp
        # manually use pip to install syri from github, as it isn't on pypi
        # spoof python version to get around bounds check
        pip install git+https://github.com/schneebergerlab/syri.git#egg=syri --python-version '3.10' #--no-warn-conflicts
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build package
      run: pip install .
    - name: Test package is installed successfully
      run: |
        msyd -h
        msyd call -h
        msyd view -h
