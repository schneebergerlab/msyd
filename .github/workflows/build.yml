# This workflow will build msyd as a python package, and call the CLI interface to check the install worked
# adapted from 
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        # apparently the runners all have conda installed
        # use that to install syri, as it isn't on pypi
        # manually install syris dependencies, conda does not install
        pip install Cython numpy pandas scipy psutil igraph longestrunsubsequence pysam pulp
        $CONDA/bin/conda install --freeze-installed --no-deps -c conda-forge -c bioconda "syri>=1.6.5"
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build package
      run: pip install .
    - name: Test package is installed successfully
      run: |
        msyd -h
        msyd call -h
        msyd view -h
